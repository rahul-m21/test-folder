version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Installing dependencies...
      - apt-get update && apt-get install -y git gh
      - pip install pygithub
  
  pre_build:
    commands:
      - echo Setting up the environment...
      - export GITHUB_REPOSITORY="rahul-m21/test-folder" # Repository containing the input folder
      - echo Cloning the target repository...
      - git clone https://github.com/$GITHUB_REPOSITORY target-repo
      - echo Target repository cloned successfully
      - echo Listing the contents of the target repository
      - ls -R target-repo # Lists all files and folders recursively in the target repository
  
  build:
    commands:
      - echo Running the PQC Assessment Tool...
      - git clone https://github.com/rahul-m21/Test_Tool.git tool-repo # Clone the runner tool
      - echo Listing the input folder passed to the tool
      - ls -R ./target-repo # Confirm the input folder content passed to the tool
      - echo Running the PQC Assessment command...
      - ./tool-repo/PQC_CICD/PQC_Assessment_CICD --inputFolder ./target-repo --outputFolder ./output-folder --database ./tool-repo/PQC_CICD/.database/encrypted_data.bin
      - echo Listing the output folder to verify results
      - ls -R ./output-folder # List all files generated by the tool in the output folder
      - echo PQC Assessment completed successfully
      
  post_build:
    commands:
      - echo Uploading SARIF results to GitHub Code Scanning...
      - |
        if [ -f "./output-folder/results.sarif" ]; then
          # Configure GitHub CLI authentication
          echo "$GITHUB_TOKEN" | gh auth login --with-token
          
          # Upload SARIF file to GitHub Code Scanning
          gh security-code-scanning upload \
            --repository $GITHUB_REPOSITORY \
            --ref $CODEBUILD_RESOLVED_SOURCE_VERSION \
            --commit $CODEBUILD_RESOLVED_SOURCE_VERSION \
            ./output-folder/results.sarif
          
          echo "SARIF results uploaded successfully"
        else
          echo "No SARIF file found in output folder"
        fi

artifacts:
  files:
    - "./output-folder/**/*" # Collects the output of the tool

env:
  variables:
    GITHUB_REPOSITORY: "rahul-m21/test-folder" # Input folder GitHub repository
  
  # Make sure to add this in your CodeBuild project's environment variables
  # GITHUB_TOKEN: your_personal_access_token_with_repo_and_security_scan_permissions