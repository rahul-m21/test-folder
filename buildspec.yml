version: 0.2

phases:
  install:
    commands:
      - echo Installing dependencies...
      - apt-get update && apt-get install -y git
      - curl -sSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
      - sudo apt update
      - sudo apt install gh -y

  pre_build:
    commands:
      - echo Setting up the environment...
      - export GITHUB_REPOSITORY="rahul-m21/test-folder" # Repository containing the input folder
      - echo Cloning the target repository...
      - git clone https://github.com/$GITHUB_REPOSITORY target-repo
      - echo Target repository cloned successfully
      - echo Listing the contents of the target repository
      - ls -R target-repo # Lists all files and folders recursively in the target repository

  build:
    commands:
      - echo Running the PQC Assessment Tool...
      - git clone https://github.com/rahul-m21/Test_Tool.git tool-repo # Clone the runner tool
      - echo Listing the input folder passed to the tool
      - ls -R ./target-repo # Confirm the input folder content passed to the tool
      - echo Running the PQC Assessment command...
      - ./tool-repo/PQC_CICD/PQC_Assessment_CICD --inputFolder ./target-repo --outputFolder ./output-folder --database ./tool-repo/PQC_CICD/.database/encrypted_data.bin
      - echo Listing the output folder to verify results
      - ls -R ./output-folder # List all files generated by the tool in the output folder

  post_build:
    commands:
      - echo Uploading SARIF results to GitHub Security tab...
      - if [ -f ./output-folder/results.sarif ]; then
          echo SARIF file found. Uploading to GitHub...;
          gh code-scanning upload --sarif=./output-folder/results.sarif --repo=$GITHUB_REPOSITORY --ref=$CODEBUILD_SOURCE_VERSION;
        else
          echo SARIF file not found. Skipping upload.;
        fi
      - echo Build completed successfully

artifacts:
  files:
    - "./output-folder/**/*" # Collects the output of the tool

env:
  variables:
    GITHUB_REPOSITORY: "rahul-m21/test-folder" # Input folder GitHub repository
